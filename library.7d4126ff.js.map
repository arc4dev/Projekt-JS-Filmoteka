{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAYC,SAASC,eAAe,eACpCC,EAAWF,SAASC,eAAe,aAGnCE,EAAQC,IACZ,IACE,MAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,EAC3D,CAAE,MAAOM,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,QAC3C,GAGF,SAASC,EAAiBC,GACxB,GAAIA,EACF,OAAOA,EAAMC,QAAO,CAACC,EAAOC,EAAOC,IAC1BA,EAAKC,QAAQH,KAAWC,GAGrC,CAEA,MAAMG,EAAsBC,MAAOC,IACjC,GAAmB,gBAAfA,EAA8B,CAChC,MAAMC,QAA+BV,EAAiBX,EAAK,sBAC5BK,IAA3BgB,EACF3B,EAAA4B,OAAOC,QAAQ,oCACJ,EAAAC,EAAAC,kBAAiBJ,EAChC,MAAO,GAAmB,cAAfD,EAA4B,CACrC,MAAMC,QAA+BV,EAAiBX,EAAK,eAC5BK,IAA3BgB,EACF3B,EAAA4B,OAAOC,QAAQ,kCACJ,EAAAC,EAAAC,kBAAiBJ,EAChC,GAGFH,EAAqBQ,WAAa,eAElC9B,EAAU+B,iBAAiB,SAAUC,IACnCF,WAAaE,EAAGC,cAAcC,GAC9BZ,EAAoBQ,WAAA,IAGtB3B,EAAS4B,iBAAiB,SAAUC,IAClCF,WAAaE,EAAGC,cAAcC,GAC9BZ,EAAoBQ,WAAA","sources":["src/js/loadLocalStorage.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { renderMoviesList } from './movies-list';\n\nconst btnWatche = document.getElementById('btn-watched');\nconst btnQueue = document.getElementById('btn-queue');\n\n//function load from localstorage\nconst load = (key) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nfunction removeDuplicates(array) {\n  if (array) {\n    return array.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n  }\n}\n\nconst renderLocaleStorage = async (typeOfList) => {\n  if (typeOfList === 'btn-watched') {\n    const moviesFromLocalStorage = await removeDuplicates(load('WatchedFilms'));\n    if (moviesFromLocalStorage === undefined) {\n      Notify.failure('Nie ma obejrzanych filmów.');\n    } else await renderMoviesList(moviesFromLocalStorage);\n  } else if (typeOfList === 'btn-queue') {\n    const moviesFromLocalStorage = await removeDuplicates(load('Queue'));\n    if (moviesFromLocalStorage === undefined) {\n      Notify.failure('Nie ma filmów w kolejce.');\n    } else await renderMoviesList(moviesFromLocalStorage);\n  }\n};\n\nrenderLocaleStorage((typeOfList = 'btn-watched'));\n\nbtnWatche.addEventListener('click', (ev) => {\n  typeOfList = ev.currentTarget.id;\n  renderLocaleStorage(typeOfList);\n});\n\nbtnQueue.addEventListener('click', (ev) => {\n  typeOfList = ev.currentTarget.id;\n  renderLocaleStorage(typeOfList);\n});\n"],"names":["$7IoHk","parcelRequire","$cee97bf8ea4e26e4$var$btnWatche","document","getElementById","$cee97bf8ea4e26e4$var$btnQueue","$cee97bf8ea4e26e4$var$load","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$cee97bf8ea4e26e4$var$removeDuplicates","array","filter","value","index","self","indexOf","$cee97bf8ea4e26e4$var$renderLocaleStorage","async","typeOfList1","moviesFromLocalStorage","Notify","failure","$g2Y6z","renderMoviesList","typeOfList","addEventListener","ev","currentTarget","id"],"version":3,"file":"library.7d4126ff.js.map"}